策略模式定义了一系列的算法，并将每一个算法封装起来，而且使它们还可以相互替换。策略模式让算法独立于使用它的客户而独立变化。

策略模式定义和封装了一系列的算法，它们是可以相互替换的，也就是说它们具有共性，
而它们的共性就体现在策略接口的行为上，另外为了达到最后一句话的目的，也就是说

让算法独立于使用它的客户而独立变化，

我们需要让客户端依赖于策略接口。


Demo中的例子将：

策略模式

注解

动态代理

工厂模式

反射

融合不错的学习例子


策略模式的使用场景，就是有一系列的可相互替换的算法的时候，
我们就可以使用策略模式将这些算法做成接口的实现，
并让我们依赖于算法的类依赖于抽象的算法接口，
这样可以彻底消除类与具体算法之间的耦合